name: Build oj-libjdwp
on: [push]

jobs:
  build:
    name: Build ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        abi:
          - arm64-v8a
          - armeabi-v7a
          - x86
          - x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install packages
        run: sudo apt-get install cmake make ninja-build python3

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 8

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c

      - name: CMake Configure
        env:
          NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          cmake -B build -GNinja \
            -DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake \
            -DANDROID_PLATFORM=android-26 \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DCMAKE_SYSTEM_NAME=Android \
            -DANDROID_ARM_NEON=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=build/install \
            -DJava_ROOT=${JAVA_HOME_8_X64} \
            .

      - name: Build
        env:
          NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          export PATH=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          ninja -C build

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: oj-libjdwp-${{ matrix.abi }}
          path: |
            build/*.jar
            build/*.so
            build/*.a
            build/libiconv/lib/*.so
            build/libiconv/lib/*.a
